---
# Install OpenIG 
# Assumes tomcat openig instance has been previously deployed
# Pass tomcat_instance as a role param

- name: Check for staged OpenIG bits - so we can skip download
  stat: path=/vagrant/staging/{{openig_zip}}
  register: staged_openig

# Copy staged openig dist bits
- name: Copy staged OpenIG bits to image
  command: cp /vagrant/staging/{{openig_zip}} {{download_dir}}
  when: staged_openig.stat.exists

- name: Download OpenIG
  get_url: url="{{openig_download_url}}" dest="{{download_dir}}/{{openig_version}}.war"
  environment:
    proxy_env
  when: staged_openig.stat.exists == false
    
- service: name={{ tomcat_service }} state=stopped
  
- name: Remove the ROOT dir so we can install the gateway at the root 
  file: path={{tomcat_instance_dir}}/webapps/ROOT state=absent
  
- name: Expand the gateway war file
  command:  /usr/bin/unzip {{download_dir}}/{{openig_version}}.war -d {{tomcat_instance_dir}}/webapps/ROOT
  
#- name: Copy web.xml to put in AM filter 
#  copy:  src=web.xml dest=/home/fr/{{tomcat_instance}}/webapps/ROOT/WEB-INF/web.xml
#  
#- name: copy sample config.json for gateway
#  file: path=/home/fr/.ForgeRock/OpenIG/ state=directory
#
#  
#- name: copy sample config.json for gateway
#  copy: src=config.json dest=/home/fr/.ForgeRock/OpenIG/config.json

- name: reStart tomcat
  service: name={{ tomcat_service }} state=restarted