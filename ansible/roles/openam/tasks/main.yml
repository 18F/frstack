---
# This role installs openam in tomcat
# This assumes tomcat has already been installed
# Assumes the software has been downloaded and is available at {{ forgerock_download_dir }}/openam
# Uses the variable {{ tomcat_openam_dir }} to know where to install the war file. 
#  This should be the path to the openam tomcat instance dir

- service: name=openam.service state=stopped
- name: Clean up old install dirs in case this is a re-install
  file: path="{{download_dir}}/openam" state=absent

- file:  path="{{ install_root }}/ssoadmin" state=absent
- file:  path="{{ install_root }}/ssoconfigtool" state=absent
- file: path="{{ tomcat_openam_dir }}/webapps/openam"  state=absent 

# download openam or used cached copy
- include: ../../download.yml download_file="{{openam_zip_file}}" download_url="{{openam_download_url}}"
  
- name: Unpack downloaded OpenAM bits
  command: chdir="{{download_dir}}" unzip "{{openam_zip_file}}"

# create install dir, openam dir
- file: path="{{ install_root}}" owner="{{ fr_user }}" state="directory" 

# Note that the openam config dir has to be writable by the user who runs the web container
# In our case that is tomcat. TODO: Use group permissions here
- file: path={{ install_root}}/openam owner={{fr_user}} state="directory" 

- name: unpack config tools
  command: creates="{{ install_root }}/ssoconfigtool" unzip {{ download_dir }}/openam/SSOConfiguratorTools-{{ openam_version }}.zip -d {{ install_root }}/ssoconfigtool
  
- name: copy config file from template
  template: src=openam.config dest="{{ install_root }}/ssoconfigtool/openam.config" owner="{{fr_user}}" mode=0644

- name: Deploy war to tomcat
  command: creates="{{ tomcat_openam_dir }}/webapps/openam" cp "{{ download_dir }}/openam/OpenAM-{{ openam_version }}.war" "{{ tomcat_openam_dir}}/webapps/openam.war"

- name: Ensure openam tomcat instance is running
  service: name="openam.service" state=restarted enabled=yes

- name: Wait for openam war to be fully deployed before running configurator
  wait_for: port={{openam_server_port}} delay=10

# Bit of hack. The previous command waits for the port -but AM could still be deploying
# So this waits another 30 seconds to be safe
- wait_for: port={{openam_server_port}} delay=30

  
#  - name: Run openam configurator
#  command: creates={{install_root}}/openam/bootstrap java -jar {{ install_root }}/ssoconfigtool/openam-configurator-tool-{{ openam_version }}.jar 
#         --file {{ install_root }}/ssoconfigtool/openam.config --acceptLicense
         
- name: Run openam configurator
  command: creates="{{install_root}}/openam/bootstrap" java -jar "{{ install_root }}/ssoconfigtool/openam-configurator-tool-{{ openam_version }}.jar"
         --file "{{ install_root }}/ssoconfigtool/openam.config" "{{ openam_license_switch }}"

# Make sure everything is owned by fr user  
- file: recurse=yes state=directory  owner="{{ fr_user }}" 
     group="tomcat" path="{{ install_root}}" mode=0775
